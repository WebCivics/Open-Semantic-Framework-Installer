#!/usr/bin/php -q

<?php  
  
  if(PHP_SAPI != 'cli')
  {
    die('This is a shell application, so make sure to run this application in your terminal.');
  }
  
  ini_set('memory_limit', '500M');
  
  // Set the working directory of this script to its home directory. That way, if it is ran from elsewhere,
  // the relative paths will follow.
  chdir(dirname(realpath($argv[0])));  

  include_once('inc/OSFInstaller_Ubuntu_12_10.php');
  
  $installer;
  
  // Detects what is the version of the current linux distribution.
  // Let's use the installer for the good distribution and the good version.
  // If the distribution/version is not supported, the generic installer
  // will be used which means that some features may be disabled.
  if(OSFInstaller_Ubuntu_12_10::isWorkingInstaller())
  {
    
    $installer = new OSFInstaller_Ubuntu_12_10(getcwd().'/installer.ini');  
  }
  else
  {
    include_once('inc/OSFInstallerGeneric.php');
    
    $installer = new OSFInstallerGeneric(getcwd().'/installer.ini');
  }
  
  
  
  // Get commandline options
  $arguments = getopt('h::v::c::', array('help::',
                                         'verbose::',
                                         'configure-installer::',
                                         'list-configurations::',
                                         'install-osf::',
                                         'install-construct::',
                                         'install-apache2::',
                                         'install-mysql::',
                                         'install-phpmyadmin::',
                                         'install-php5::',
                                         'install-virtuoso::',
                                         'install-solr::',
                                         'install-structwsf::',
                                         'upgrade-structwsf::',
                                         'install-structwsf-php-api::',
                                         'upgrade-structwsf-php-api::',
                                         'install-structwsf-tests-suites::',
                                         'upgrade-structwsf-tests-suites::',
                                         'install-datasets-management-tool::',
                                         'upgrade-datasets-management-tool::',  
                                         'install-data-validator-tool::',
                                         'upgrade-data-validator-tool::',  
                                         'install-ontologies-management-tool::',
                                         'upgrade-ontologies-management-tool::'));  
  
  // Displaying DSF's help screen if required
  if(isset($arguments['h']) || isset($arguments['help']))
  {
    $installer->cecho("Usage: osf-install [OPTIONS]\n\n\n", 'WHITE');
    $installer->cecho("General Options:\n", 'WHITE');
    $installer->cecho("-h, --help                              Show this help section\n", 'WHITE');
    $installer->cecho("-v, --verbose                           Make this insaller verbose\n", 'WHITE');
    $installer->cecho("-c, --configure-installer               Configure the options used by this installer\n", 'WHITE');
    $installer->cecho("--list-configurations                   List the current configuration used by the installer tool\n\n", 'WHITE');
    $installer->cecho("OSF Installation Options:\n", 'WHITE');
    $installer->cecho("Note: the [VERSION] parameter is optional.\n", 'WHITE');
    $installer->cecho("      If no version is specified, the latest DEV version will be used\n", 'WHITE');
    $installer->cecho("--install-osf                           Install the Open Semantic Framework \n", 'WHITE');
    $installer->cecho("--install-apache2                       Install Apache2 \n", 'WHITE');
    $installer->cecho("--install-mysql                         Install MySQL \n", 'WHITE');
    $installer->cecho("--install-phpmyadmin                    Install PhpMyAdmin \n", 'WHITE');
    $installer->cecho("--install-virtuoso                      Install Virtuoso \n", 'WHITE');
    $installer->cecho("--install-solr                          Install Solr \n", 'WHITE');
    $installer->cecho("--install-php5                          Install PHP5 \n", 'WHITE');
    $installer->cecho("--install-structwsf-php-api=\"[VERSION]\"             Install the structWSF-PHP-API library \n", 'WHITE');
    $installer->cecho("--install-structwsf-tests-suites=\"[VERSION]\"        Install the structWSF tests suites \n", 'WHITE');
    $installer->cecho("--install-datasets-management-tool=\"[VERSION]\"      Install the Datasets Management Tool \n", 'WHITE');
    $installer->cecho("--install-data-validator-tool=\"[VERSION]\"      Install the Data Validator Tool \n", 'WHITE');
    $installer->cecho("--install-ontologies-management-tool=\"[VERSION]\"    Install the Ontologies Management Tool \n", 'WHITE');
    $installer->cecho("\nconStruct/Drupal Installation Options:\n", 'WHITE');
    $installer->cecho("--install-construct                           Install the Drupal with the conStruct modules \n", 'WHITE');
    $installer->cecho("\nUpgrade Options:\n", 'WHITE');
    $installer->cecho("Note: the [VERSION] parameter is optional.\n", 'WHITE');
    $installer->cecho("      If no version is specified, the latest DEV version will be used\n", 'WHITE');
    $installer->cecho("--upgrade-structwsf=\"[VERSION]\"                     Upgrade structWSF \n", 'WHITE');
    $installer->cecho("--upgrade-structwsf-php-api=\"[VERSION]\"             Upgrade the structWSF-PHP-API library \n", 'WHITE');
    $installer->cecho("--upgrade-structwsf-tests-suites=\"[VERSION]\"        Upgrade the structWSF tests suites \n", 'WHITE');
    $installer->cecho("--upgrade-datasets-management-tool=\"[VERSION]\"      Upgrade the Datasets Management Tool \n", 'WHITE');
    $installer->cecho("--upgrade-data-validator-tool=\"[VERSION]\"      Upgrade the Data Validator Tool \n", 'WHITE');
    $installer->cecho("--upgrade-ontologies-management-tool=\"[VERSION]\"    Upgrade the Ontologies Management Tool \n", 'WHITE');
    $installer->cecho("\n\n", 'WHITE');
    die;
  }
  
  // Configure installer
  
  // Run both configurations if the user specifically want to configure them
  if(isset($arguments['c']) || isset($arguments['configure-installer']))
  {
    $installer->configureInstallerOSF();
    $installer->configureInstallerConstruct();
  }  
  // Run the conStruct configuration if the user wants to install it without having it
  // configured
  elseif(isset($arguments['install-construct']) && !$installer->installer_construct_configured)
  {
    $installer->configureInstallerConstruct();
  }
  // If the user wants to do anything else and that the OSF configuration is not done
  elseif(!$installer->installer_osf_configured && !isset($arguments['install-construct']))
  {
    $installer->configureInstallerOSF();
  }

  // List current configuration settings
  if(isset($arguments['list-configurations']))
  {
    $installer->listConfigurations();
  }
  
  // Make the output more verbose
  if(isset($arguments['v']) || isset($arguments['verbose']))
  {
    $installer->verbose();
  }
  
  // Install the Open Semantic Framework
  if(isset($arguments['install-osf']))
  {
    $installer->installOSF();
  }
  
  // Install the Drupal & conStruct
  if(isset($arguments['install-construct']))
  {
    $installer->installConstruct();
  }

  // Install the structWSF-PHP-API library
  if(isset($arguments['install-structwsf-php-api']))
  {
    $installer->installStructWSFPHPAPI($arguments['install-structwsf-php-api']);
  }

  // Upgrade the structWSF-PHP-API library
  if(isset($arguments['upgrade-structwsf-php-api']))
  {
    $installer->upgradeStructWSFPHPAPI($arguments['upgrade-structwsf-php-api']);
  }

  // Install the Datasets Management Tool library
  if(isset($arguments['install-datasets-management-tool']))
  {
    $installer->installDatasetsManagementTool($arguments['install-datasets-management-tool']);
  }

  // Upgrade the Datasets Management Tool library
  if(isset($arguments['upgrade-datasets-management-tool']))
  {
    $installer->upgradeDatasetsManagementTool($arguments['upgrade-datasets-management-tool']);
  }

  // Install the Data Validator Tool library
  if(isset($arguments['install-data-validator-tool']))
  {
    $installer->installDataValidatorTool($arguments['install-data-validator-tool']);
  }
  
  // Upgrade the Data Validator Tool library
  if(isset($arguments['upgrade-data-validator-tool']))
  {
    $installer->upgradeDataValidatorTool($arguments['upgrade-data-validator-tool']);
  }

  // Install the Ontologies Management Tool library
  if(isset($arguments['install-ontologies-management-tool']))
  {
    $installer->installOntologiesManagementTool($arguments['install-ontologies-management-tool']);
  }

  // Upgrade the Ontologies Management Tool library
  if(isset($arguments['upgrade-ontologies-management-tool']))
  {
    $installer->upgradeOntologiesManagementTool($arguments['upgrade-ontologies-management-tool']);
  }
  
  // Install structWSF Tests Suites
  if(isset($arguments['install-structwsf-tests-suites']))
  {
    $installer->installStructWSFTestsSuites($arguments['install-structwsf-tests-suites']);
  }
  
  // Upgrade structWSF Tests Suites
  if(isset($arguments['upgrade-structwsf-tests-suites']))
  {
    $installer->upgradeStructWSFTestsSuites($arguments['upgrade-structwsf-tests-suites']);
  }
  
  // Install Apache2 on the system
  if(isset($arguments['install-apache2']))
  {
    $installer->installApache2();
  }
  
  // Install PHP5 on the system
  if(isset($arguments['install-php5']))
  {
    $installer->installPhp5();
  }
  
  // Install MySQL on the system
  if(isset($arguments['install-mysql']))
  {
    $installer->installMySQL();
  }
  
  // Install PhpMyAdmin on the system
  if(isset($arguments['install-phpmyadmin']))
  {
    $installer->installPhpMyAdmin();
  }
  
  // Install structWSF on the system
  if(isset($arguments['install-structwsf']))
  {
    $installer->installStructWSF($arguments['install-structwsf']);
  }
  
  // Upgrade the structWSF version on the system
  if(isset($arguments['upgrade-structwsf']))
  {
    include_once('inc/StructWSFUpgrader.php');    
    
    $upgrader = new StructWSFUpgrader(getcwd().'/installer.ini', $arguments['upgrade-structwsf']);
  }
  
  // Install Virtuoso on the system
  if(isset($arguments['install-virtuoso']))
  {
    $installer->installVirtuoso();
  }
  
  // Install Solr on the system
  if(isset($arguments['install-solr']))
  {
    $installer->installSolr();
  }
  
?>